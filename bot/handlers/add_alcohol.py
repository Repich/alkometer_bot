"""
–ú–æ–¥—É–ª—å add_alcohol.py

–†–µ–∞–ª–∏–∑—É–µ—Ç –ª–æ–≥–∏–∫—É –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–∏ –∞–ª–∫–æ–≥–æ–ª—è:
1. –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ + –∫–Ω–æ–ø–∫–∞ "–î—Ä—É–≥–æ–π".
2. –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫ ‚Äî –∑–∞–ø—Ä–æ—Å –æ–±—ä—ë–º–∞ –∏ —Ü–µ–Ω—ã.
3. –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫ ‚Äî –∑–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –∫—Ä–µ–ø–æ—Å—Ç–∏, —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ AlcoholType;
   –∑–∞—Ç–µ–º –∑–∞–ø—Ä–æ—Å –æ–±—ä—ë–º–∞ –∏ —Ü–µ–Ω—ã, —Å–æ–∑–¥–∞–Ω–∏–µ Consumption.

–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
"""

from telegram import (
    Update,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove
)
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    CommandHandler,
    filters
)

from bot.logger import logger
from bot.utils.db import SessionLocal
from bot.services.user_service import get_user, create_user
from bot.services.alcohol_service import (
    get_alcohol_type_by_name,
    create_alcohol_type,
    get_top_alcohol_types
)
from bot.models.consumption import Consumption
from bot.handlers.start import start

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
CHOOSE_FAV_DRINK, ASK_NAME, ASK_CONTENT, ASK_AMOUNT, ASK_PRICE = range(5)

async def add_alcohol_start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –®–∞–≥ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "–î–æ–±–∞–≤–∏—Ç—å –∞–ª–∫–æ–≥–æ–ª—å".
    –ë–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ (top-6) + –∫–Ω–æ–ø–∫—É "–î—Ä—É–≥–æ–π".
    """
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è.")

    session = SessionLocal()
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-6 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ (–∏–ª–∏ –º–µ–Ω—å—à–µ, –µ—Å–ª–∏ –≤ –±–∞–∑–µ –∏—Ö –º–µ–Ω—å—à–µ 6)
        top_alcohols = get_top_alcohol_types(session, limit=6)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤ (–ø–æ 3 –≤ —Å—Ç—Ä–æ–∫–µ)
        keyboard = [
            [alc.name for alc in top_alcohols[i : i + 3]]
            for i in range(0, len(top_alcohols), 3)
        ]
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î—Ä—É–≥–æ–π" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –Ω–∞–ø–∏—Ç–∫–∞
        keyboard.append(["–î—Ä—É–≥–æ–π"])

        await update.message.reply_text(
            text="üéØ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–î—Ä—É–≥–æ–π':",
            reply_markup=ReplyKeyboardMarkup(
                keyboard,
                resize_keyboard=True,
                one_time_keyboard=True
            )
        )
        return CHOOSE_FAV_DRINK
    finally:
        session.close()

async def choose_fav_drink(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –®–∞–≥ 2: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –æ–¥–∏–Ω –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏–ª–∏ "–î—Ä—É–≥–æ–π".
    - –ï—Å–ª–∏ "–î—Ä—É–≥–æ–π" -> –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞ (ASK_NAME).
    - –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∞–ø–∏—Ç–æ–∫ -> —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –æ–±—ä—ë–º–∞ (ASK_AMOUNT).
    """
    user_input = update.message.text.strip()

    if user_input == "–î—Ä—É–≥–æ–π":
        await update.message.reply_text(
            text="üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞:",
            reply_markup=ReplyKeyboardRemove()
        )
        return ASK_NAME

    # –ü–æ–∏—Å–∫ –Ω–∞–ø–∏—Ç–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    session = SessionLocal()
    try:
        alcohol_type = get_alcohol_type_by_name(session, user_input)
        if not alcohol_type:
            await update.message.reply_text(
                "‚ö†Ô∏è –ù–∞–ø–∏—Ç–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω! –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–î—Ä—É–≥–æ–π'."
            )
            return CHOOSE_FAV_DRINK

        context.user_data['alcohol_type_id'] = alcohol_type.id
        context.user_data['alcohol_name'] = alcohol_type.name

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –æ–±—ä—ë–º–∞ (–≤ –ª–∏—Ç—Ä–∞—Ö)
        await update.message.reply_text(
            text=f"üìè –°–∫–æ–ª—å–∫–æ {alcohol_type.name} –≤—ã –≤—ã–ø–∏–ª–∏? (–≤ –ª–∏—Ç—Ä–∞—Ö)",
            reply_markup=ReplyKeyboardRemove()
        )
        return ASK_AMOUNT
    finally:
        session.close()

async def ask_alcohol_content(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –®–∞–≥ 3 (ASK_NAME -> ASK_CONTENT):
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞, —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∫—Ä–µ–ø–æ—Å—Ç—å (0..100).
    """
    context.user_data['alcohol_name'] = update.message.text.strip()
    await update.message.reply_text(
        text="üìä –í–≤–µ–¥–∏—Ç–µ –∫—Ä–µ–ø–æ—Å—Ç—å –Ω–∞–ø–∏—Ç–∫–∞ (—á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100):"
    )
    return ASK_CONTENT

async def create_new_alcohol_type(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ AlcoholType –¥–ª—è –Ω–æ–≤–æ–≥–æ –Ω–∞–ø–∏—Ç–∫–∞.
    –ó–∞—Ç–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –æ–±—ä—ë–º–∞ (ASK_AMOUNT).
    """
    session = SessionLocal()
    try:
        content_str = update.message.text.replace(',', '.')
        content = float(content_str)
        if content < 0 or content > 100:
            raise ValueError

        new_alcohol = create_alcohol_type(
            session=session,
            name=context.user_data['alcohol_name'],
            alcohol_content=content
        )
        context.user_data['alcohol_type_id'] = new_alcohol.id
        context.user_data['alcohol_name'] = new_alcohol.name

        await update.message.reply_text(
            text=(
                f"–ù–æ–≤—ã–π –Ω–∞–ø–∏—Ç–æ–∫ '{new_alcohol.name}' (–∫—Ä–µ–ø–æ—Å—Ç—å: {content}%) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É.\n"
                f"üìè –°–∫–æ–ª—å–∫–æ {new_alcohol.name} –≤—ã –≤—ã–ø–∏–ª–∏? (–≤ –ª–∏—Ç—Ä–∞—Ö)"
            )
        )
        return ASK_AMOUNT
    except ValueError:
        await update.message.reply_text("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100:")
        return ASK_CONTENT
    finally:
        session.close()

async def ask_alcohol_volume(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –®–∞–≥ 4 (ASK_AMOUNT): –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –æ–±—ä—ë–º (–≤ –ª–∏—Ç—Ä–∞—Ö).
    –ó–∞—Ç–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É —Ü–µ–Ω—ã (ASK_PRICE).
    """
    text = update.message.text.replace(',', '.')
    try:
        amount = float(text)
        if amount <= 0:
            raise ValueError
        context.user_data['amount'] = amount
    except ValueError:
        await update.message.reply_text("‚ùå –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–ª–∏—Ç—Ä—ã):")
        return ASK_AMOUNT

    await update.message.reply_text("üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±) –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è:")
    return ASK_PRICE

async def save_consumption(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –®–∞–≥ 5 (ASK_PRICE): –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å.
    –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å Consumption (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ user_id = user.id, –∞ –Ω–µ telegram_id),
    –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (start).
    """
    session = SessionLocal()
    user = None  # –û–±—ä—è–≤–ª—è–µ–º –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å NameError –≤ except
    try:
        price_str = update.message.text.replace(',', '.')
        price = float(price_str)
        if price < 0:
            raise ValueError("–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π")

        # –ü–æ–ª—É—á–∞–µ–º / —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç User (—Å –ø–æ–º–æ—â—å—é user_service)
        telegram_id = update.effective_user.id
        username = update.effective_user.username

        user = get_user(session, telegram_id)
        if not user:
            user = create_user(session, telegram_id, username)

        # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        logger.info(f"[DEBUG] –ü–æ–ª—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user.id={user.id}, telegram_id={user.telegram_id}")

        alcohol_type_id = context.user_data['alcohol_type_id']
        alcohol_name = context.user_data['alcohol_name']
        amount = context.user_data['amount']

        logger.info(f"[DEBUG] –ë—É–¥–µ–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å Consumption c user_id={user.id}, alcohol_type_id={alcohol_type_id}")

        consumption = Consumption(
            user_id=user.id,         # –í–ê–ñ–ù–û: —Å—Ç–∞–≤–∏–º user.id, –∞ –Ω–µ telegram_id
            alcohol_type_id=alcohol_type_id,
            amount=amount,
            price=price
        )
        session.add(consumption)
        session.commit()

        await update.message.reply_text(
            text=(
                f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!\n"
                f"‚Ä¢ –ù–∞–ø–∏—Ç–æ–∫: {alcohol_name}\n"
                f"‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount} –ª\n"
                f"‚Ä¢ –°—Ç–æ–∏–º–æ—Å—Ç—å: {price} —Ä—É–±\n"
            )
        )
    except ValueError as ve:
        await update.message.reply_text(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞: {ve}. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (—Ä—É–±):")
        return ASK_PRICE
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ Consumption: {e}")
        # –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–æ–≥ user, –µ—Å–ª–∏ —É—Å–ø–µ–ª–∏ —Å–æ–∑–¥–∞—Ç—å
        if user:
            logger.error(f"–û—à–∏–±–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: user.id={user.id}, telegram_id={user.telegram_id}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return ConversationHandler.END
    finally:
        session.close()
        context.user_data.clear()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await start(update, context)
    return ConversationHandler.END

# –ü–æ–ª–Ω—ã–π ConversationHandler, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –≤—Å–µ —à–∞–≥–∏ –¥–∏–∞–ª–æ–≥–∞
add_alcohol_conv_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex(r'^–î–æ–±–∞–≤–∏—Ç—å –∞–ª–∫–æ–≥–æ–ª—å$'), add_alcohol_start)],
    states={
        CHOOSE_FAV_DRINK: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, choose_fav_drink)
        ],
        ASK_NAME: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, ask_alcohol_content)
        ],
        ASK_CONTENT: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, create_new_alcohol_type)
        ],
        ASK_AMOUNT: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, ask_alcohol_volume)
        ],
        ASK_PRICE: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, save_consumption)
        ],
    },
    fallbacks=[CommandHandler('cancel', lambda u, c: ConversationHandler.END)]
)
